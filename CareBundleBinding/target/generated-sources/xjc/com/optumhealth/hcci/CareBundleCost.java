//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.11 at 05:56:05 PM CDT 
//


package com.optumhealth.hcci;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CareBundleCost complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CareBundleCost">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.example.org/treatmentcondition}CareBundleMinimal">
 *       &lt;sequence>
 *         &lt;element name="geoAvgCost" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="geoType" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="geoValue" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CareBundleCost", propOrder = {
    "geoAvgCost",
    "geoType",
    "geoValue"
})
public class CareBundleCost
    extends CareBundleMinimal
    implements Serializable, Cloneable, CopyTo, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 1L;
    @XmlElement(required = true)
    protected String geoAvgCost;
    @XmlElement(required = true)
    protected String geoType;
    @XmlElement(required = true)
    protected String geoValue;

    /**
     * Default no-arg constructor
     * 
     */
    public CareBundleCost() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CareBundleCost(final String careBundleCode, final String careBundleDetailURI, final String careBundleName, final String careBundleQualityURI, final String geoAvgCost, final String geoType, final String geoValue) {
        super(careBundleCode, careBundleDetailURI, careBundleName, careBundleQualityURI);
        this.geoAvgCost = geoAvgCost;
        this.geoType = geoType;
        this.geoValue = geoValue;
    }

    /**
     * Gets the value of the geoAvgCost property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeoAvgCost() {
        return geoAvgCost;
    }

    /**
     * Sets the value of the geoAvgCost property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeoAvgCost(String value) {
        this.geoAvgCost = value;
    }

    /**
     * Gets the value of the geoType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeoType() {
        return geoType;
    }

    /**
     * Sets the value of the geoType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeoType(String value) {
        this.geoType = value;
    }

    /**
     * Gets the value of the geoValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGeoValue() {
        return geoValue;
    }

    /**
     * Sets the value of the geoValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGeoValue(String value) {
        this.geoValue = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theGeoAvgCost;
            theGeoAvgCost = this.getGeoAvgCost();
            strategy.appendField(locator, this, "geoAvgCost", buffer, theGeoAvgCost);
        }
        {
            String theGeoType;
            theGeoType = this.getGeoType();
            strategy.appendField(locator, this, "geoType", buffer, theGeoType);
        }
        {
            String theGeoValue;
            theGeoValue = this.getGeoValue();
            strategy.appendField(locator, this, "geoValue", buffer, theGeoValue);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CareBundleCost)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CareBundleCost that = ((CareBundleCost) object);
        {
            String lhsGeoAvgCost;
            lhsGeoAvgCost = this.getGeoAvgCost();
            String rhsGeoAvgCost;
            rhsGeoAvgCost = that.getGeoAvgCost();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geoAvgCost", lhsGeoAvgCost), LocatorUtils.property(thatLocator, "geoAvgCost", rhsGeoAvgCost), lhsGeoAvgCost, rhsGeoAvgCost)) {
                return false;
            }
        }
        {
            String lhsGeoType;
            lhsGeoType = this.getGeoType();
            String rhsGeoType;
            rhsGeoType = that.getGeoType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geoType", lhsGeoType), LocatorUtils.property(thatLocator, "geoType", rhsGeoType), lhsGeoType, rhsGeoType)) {
                return false;
            }
        }
        {
            String lhsGeoValue;
            lhsGeoValue = this.getGeoValue();
            String rhsGeoValue;
            rhsGeoValue = that.getGeoValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "geoValue", lhsGeoValue), LocatorUtils.property(thatLocator, "geoValue", rhsGeoValue), lhsGeoValue, rhsGeoValue)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theGeoAvgCost;
            theGeoAvgCost = this.getGeoAvgCost();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geoAvgCost", theGeoAvgCost), currentHashCode, theGeoAvgCost);
        }
        {
            String theGeoType;
            theGeoType = this.getGeoType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geoType", theGeoType), currentHashCode, theGeoType);
        }
        {
            String theGeoValue;
            theGeoValue = this.getGeoValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "geoValue", theGeoValue), currentHashCode, theGeoValue);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof CareBundleCost) {
            final CareBundleCost copy = ((CareBundleCost) draftCopy);
            if (this.geoAvgCost!= null) {
                String sourceGeoAvgCost;
                sourceGeoAvgCost = this.getGeoAvgCost();
                String copyGeoAvgCost = ((String) strategy.copy(LocatorUtils.property(locator, "geoAvgCost", sourceGeoAvgCost), sourceGeoAvgCost));
                copy.setGeoAvgCost(copyGeoAvgCost);
            } else {
                copy.geoAvgCost = null;
            }
            if (this.geoType!= null) {
                String sourceGeoType;
                sourceGeoType = this.getGeoType();
                String copyGeoType = ((String) strategy.copy(LocatorUtils.property(locator, "geoType", sourceGeoType), sourceGeoType));
                copy.setGeoType(copyGeoType);
            } else {
                copy.geoType = null;
            }
            if (this.geoValue!= null) {
                String sourceGeoValue;
                sourceGeoValue = this.getGeoValue();
                String copyGeoValue = ((String) strategy.copy(LocatorUtils.property(locator, "geoValue", sourceGeoValue), sourceGeoValue));
                copy.setGeoValue(copyGeoValue);
            } else {
                copy.geoValue = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CareBundleCost();
    }

}
