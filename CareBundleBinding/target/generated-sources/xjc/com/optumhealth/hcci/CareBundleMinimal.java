//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.11 at 05:56:05 PM CDT 
//


package com.optumhealth.hcci;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CareBundleMinimal complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CareBundleMinimal">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="careBundleCode" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="careBundleDetail_URI" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="careBundleName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="careBundleQuality_URI" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CareBundleMinimal", propOrder = {
    "careBundleCode",
    "careBundleDetailURI",
    "careBundleName",
    "careBundleQualityURI"
})
@XmlSeeAlso({
    CareBundle.class,
    CareBundleCost.class
})
public class CareBundleMinimal implements Serializable, Cloneable, CopyTo, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 1L;
    @XmlElement(required = true)
    protected String careBundleCode;
    @XmlElement(name = "careBundleDetail_URI", required = true)
    protected String careBundleDetailURI;
    @XmlElement(required = true)
    protected String careBundleName;
    @XmlElement(name = "careBundleQuality_URI", required = true)
    protected String careBundleQualityURI;

    /**
     * Default no-arg constructor
     * 
     */
    public CareBundleMinimal() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CareBundleMinimal(final String careBundleCode, final String careBundleDetailURI, final String careBundleName, final String careBundleQualityURI) {
        this.careBundleCode = careBundleCode;
        this.careBundleDetailURI = careBundleDetailURI;
        this.careBundleName = careBundleName;
        this.careBundleQualityURI = careBundleQualityURI;
    }

    /**
     * Gets the value of the careBundleCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCareBundleCode() {
        return careBundleCode;
    }

    /**
     * Sets the value of the careBundleCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCareBundleCode(String value) {
        this.careBundleCode = value;
    }

    /**
     * Gets the value of the careBundleDetailURI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCareBundleDetailURI() {
        return careBundleDetailURI;
    }

    /**
     * Sets the value of the careBundleDetailURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCareBundleDetailURI(String value) {
        this.careBundleDetailURI = value;
    }

    /**
     * Gets the value of the careBundleName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCareBundleName() {
        return careBundleName;
    }

    /**
     * Sets the value of the careBundleName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCareBundleName(String value) {
        this.careBundleName = value;
    }

    /**
     * Gets the value of the careBundleQualityURI property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCareBundleQualityURI() {
        return careBundleQualityURI;
    }

    /**
     * Sets the value of the careBundleQualityURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCareBundleQualityURI(String value) {
        this.careBundleQualityURI = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theCareBundleCode;
            theCareBundleCode = this.getCareBundleCode();
            strategy.appendField(locator, this, "careBundleCode", buffer, theCareBundleCode);
        }
        {
            String theCareBundleDetailURI;
            theCareBundleDetailURI = this.getCareBundleDetailURI();
            strategy.appendField(locator, this, "careBundleDetailURI", buffer, theCareBundleDetailURI);
        }
        {
            String theCareBundleName;
            theCareBundleName = this.getCareBundleName();
            strategy.appendField(locator, this, "careBundleName", buffer, theCareBundleName);
        }
        {
            String theCareBundleQualityURI;
            theCareBundleQualityURI = this.getCareBundleQualityURI();
            strategy.appendField(locator, this, "careBundleQualityURI", buffer, theCareBundleQualityURI);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CareBundleMinimal)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CareBundleMinimal that = ((CareBundleMinimal) object);
        {
            String lhsCareBundleCode;
            lhsCareBundleCode = this.getCareBundleCode();
            String rhsCareBundleCode;
            rhsCareBundleCode = that.getCareBundleCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "careBundleCode", lhsCareBundleCode), LocatorUtils.property(thatLocator, "careBundleCode", rhsCareBundleCode), lhsCareBundleCode, rhsCareBundleCode)) {
                return false;
            }
        }
        {
            String lhsCareBundleDetailURI;
            lhsCareBundleDetailURI = this.getCareBundleDetailURI();
            String rhsCareBundleDetailURI;
            rhsCareBundleDetailURI = that.getCareBundleDetailURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "careBundleDetailURI", lhsCareBundleDetailURI), LocatorUtils.property(thatLocator, "careBundleDetailURI", rhsCareBundleDetailURI), lhsCareBundleDetailURI, rhsCareBundleDetailURI)) {
                return false;
            }
        }
        {
            String lhsCareBundleName;
            lhsCareBundleName = this.getCareBundleName();
            String rhsCareBundleName;
            rhsCareBundleName = that.getCareBundleName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "careBundleName", lhsCareBundleName), LocatorUtils.property(thatLocator, "careBundleName", rhsCareBundleName), lhsCareBundleName, rhsCareBundleName)) {
                return false;
            }
        }
        {
            String lhsCareBundleQualityURI;
            lhsCareBundleQualityURI = this.getCareBundleQualityURI();
            String rhsCareBundleQualityURI;
            rhsCareBundleQualityURI = that.getCareBundleQualityURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "careBundleQualityURI", lhsCareBundleQualityURI), LocatorUtils.property(thatLocator, "careBundleQualityURI", rhsCareBundleQualityURI), lhsCareBundleQualityURI, rhsCareBundleQualityURI)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCareBundleCode;
            theCareBundleCode = this.getCareBundleCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "careBundleCode", theCareBundleCode), currentHashCode, theCareBundleCode);
        }
        {
            String theCareBundleDetailURI;
            theCareBundleDetailURI = this.getCareBundleDetailURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "careBundleDetailURI", theCareBundleDetailURI), currentHashCode, theCareBundleDetailURI);
        }
        {
            String theCareBundleName;
            theCareBundleName = this.getCareBundleName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "careBundleName", theCareBundleName), currentHashCode, theCareBundleName);
        }
        {
            String theCareBundleQualityURI;
            theCareBundleQualityURI = this.getCareBundleQualityURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "careBundleQualityURI", theCareBundleQualityURI), currentHashCode, theCareBundleQualityURI);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CareBundleMinimal) {
            final CareBundleMinimal copy = ((CareBundleMinimal) draftCopy);
            if (this.careBundleCode!= null) {
                String sourceCareBundleCode;
                sourceCareBundleCode = this.getCareBundleCode();
                String copyCareBundleCode = ((String) strategy.copy(LocatorUtils.property(locator, "careBundleCode", sourceCareBundleCode), sourceCareBundleCode));
                copy.setCareBundleCode(copyCareBundleCode);
            } else {
                copy.careBundleCode = null;
            }
            if (this.careBundleDetailURI!= null) {
                String sourceCareBundleDetailURI;
                sourceCareBundleDetailURI = this.getCareBundleDetailURI();
                String copyCareBundleDetailURI = ((String) strategy.copy(LocatorUtils.property(locator, "careBundleDetailURI", sourceCareBundleDetailURI), sourceCareBundleDetailURI));
                copy.setCareBundleDetailURI(copyCareBundleDetailURI);
            } else {
                copy.careBundleDetailURI = null;
            }
            if (this.careBundleName!= null) {
                String sourceCareBundleName;
                sourceCareBundleName = this.getCareBundleName();
                String copyCareBundleName = ((String) strategy.copy(LocatorUtils.property(locator, "careBundleName", sourceCareBundleName), sourceCareBundleName));
                copy.setCareBundleName(copyCareBundleName);
            } else {
                copy.careBundleName = null;
            }
            if (this.careBundleQualityURI!= null) {
                String sourceCareBundleQualityURI;
                sourceCareBundleQualityURI = this.getCareBundleQualityURI();
                String copyCareBundleQualityURI = ((String) strategy.copy(LocatorUtils.property(locator, "careBundleQualityURI", sourceCareBundleQualityURI), sourceCareBundleQualityURI));
                copy.setCareBundleQualityURI(copyCareBundleQualityURI);
            } else {
                copy.careBundleQualityURI = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CareBundleMinimal();
    }

}
