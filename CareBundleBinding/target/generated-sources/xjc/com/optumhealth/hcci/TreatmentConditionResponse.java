//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.11 at 05:56:05 PM CDT 
//


package com.optumhealth.hcci;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="treatmentCondiAbbrvtn" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="treatmentConditionName" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="careBundles" type="{http://www.example.org/treatmentcondition}CareBundle" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "treatmentCondiAbbrvtn",
    "treatmentConditionName",
    "careBundles"
})
@XmlRootElement(name = "TreatmentConditionResponse")
public class TreatmentConditionResponse implements Serializable, Cloneable, CopyTo, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 1L;
    @XmlElement(required = true)
    protected String treatmentCondiAbbrvtn;
    @XmlElement(required = true)
    protected String treatmentConditionName;
    protected List<CareBundle> careBundles;

    /**
     * Default no-arg constructor
     * 
     */
    public TreatmentConditionResponse() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public TreatmentConditionResponse(final String treatmentCondiAbbrvtn, final String treatmentConditionName, final List<CareBundle> careBundles) {
        this.treatmentCondiAbbrvtn = treatmentCondiAbbrvtn;
        this.treatmentConditionName = treatmentConditionName;
        this.careBundles = careBundles;
    }

    /**
     * Gets the value of the treatmentCondiAbbrvtn property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTreatmentCondiAbbrvtn() {
        return treatmentCondiAbbrvtn;
    }

    /**
     * Sets the value of the treatmentCondiAbbrvtn property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTreatmentCondiAbbrvtn(String value) {
        this.treatmentCondiAbbrvtn = value;
    }

    /**
     * Gets the value of the treatmentConditionName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTreatmentConditionName() {
        return treatmentConditionName;
    }

    /**
     * Sets the value of the treatmentConditionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTreatmentConditionName(String value) {
        this.treatmentConditionName = value;
    }

    /**
     * Gets the value of the careBundles property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the careBundles property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCareBundles().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CareBundle }
     * 
     * 
     */
    public List<CareBundle> getCareBundles() {
        if (careBundles == null) {
            careBundles = new ArrayList<CareBundle>();
        }
        return this.careBundles;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theTreatmentCondiAbbrvtn;
            theTreatmentCondiAbbrvtn = this.getTreatmentCondiAbbrvtn();
            strategy.appendField(locator, this, "treatmentCondiAbbrvtn", buffer, theTreatmentCondiAbbrvtn);
        }
        {
            String theTreatmentConditionName;
            theTreatmentConditionName = this.getTreatmentConditionName();
            strategy.appendField(locator, this, "treatmentConditionName", buffer, theTreatmentConditionName);
        }
        {
            List<CareBundle> theCareBundles;
            theCareBundles = this.getCareBundles();
            strategy.appendField(locator, this, "careBundles", buffer, theCareBundles);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TreatmentConditionResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TreatmentConditionResponse that = ((TreatmentConditionResponse) object);
        {
            String lhsTreatmentCondiAbbrvtn;
            lhsTreatmentCondiAbbrvtn = this.getTreatmentCondiAbbrvtn();
            String rhsTreatmentCondiAbbrvtn;
            rhsTreatmentCondiAbbrvtn = that.getTreatmentCondiAbbrvtn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "treatmentCondiAbbrvtn", lhsTreatmentCondiAbbrvtn), LocatorUtils.property(thatLocator, "treatmentCondiAbbrvtn", rhsTreatmentCondiAbbrvtn), lhsTreatmentCondiAbbrvtn, rhsTreatmentCondiAbbrvtn)) {
                return false;
            }
        }
        {
            String lhsTreatmentConditionName;
            lhsTreatmentConditionName = this.getTreatmentConditionName();
            String rhsTreatmentConditionName;
            rhsTreatmentConditionName = that.getTreatmentConditionName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "treatmentConditionName", lhsTreatmentConditionName), LocatorUtils.property(thatLocator, "treatmentConditionName", rhsTreatmentConditionName), lhsTreatmentConditionName, rhsTreatmentConditionName)) {
                return false;
            }
        }
        {
            List<CareBundle> lhsCareBundles;
            lhsCareBundles = this.getCareBundles();
            List<CareBundle> rhsCareBundles;
            rhsCareBundles = that.getCareBundles();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "careBundles", lhsCareBundles), LocatorUtils.property(thatLocator, "careBundles", rhsCareBundles), lhsCareBundles, rhsCareBundles)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theTreatmentCondiAbbrvtn;
            theTreatmentCondiAbbrvtn = this.getTreatmentCondiAbbrvtn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "treatmentCondiAbbrvtn", theTreatmentCondiAbbrvtn), currentHashCode, theTreatmentCondiAbbrvtn);
        }
        {
            String theTreatmentConditionName;
            theTreatmentConditionName = this.getTreatmentConditionName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "treatmentConditionName", theTreatmentConditionName), currentHashCode, theTreatmentConditionName);
        }
        {
            List<CareBundle> theCareBundles;
            theCareBundles = this.getCareBundles();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "careBundles", theCareBundles), currentHashCode, theCareBundles);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof TreatmentConditionResponse) {
            final TreatmentConditionResponse copy = ((TreatmentConditionResponse) draftCopy);
            if (this.treatmentCondiAbbrvtn!= null) {
                String sourceTreatmentCondiAbbrvtn;
                sourceTreatmentCondiAbbrvtn = this.getTreatmentCondiAbbrvtn();
                String copyTreatmentCondiAbbrvtn = ((String) strategy.copy(LocatorUtils.property(locator, "treatmentCondiAbbrvtn", sourceTreatmentCondiAbbrvtn), sourceTreatmentCondiAbbrvtn));
                copy.setTreatmentCondiAbbrvtn(copyTreatmentCondiAbbrvtn);
            } else {
                copy.treatmentCondiAbbrvtn = null;
            }
            if (this.treatmentConditionName!= null) {
                String sourceTreatmentConditionName;
                sourceTreatmentConditionName = this.getTreatmentConditionName();
                String copyTreatmentConditionName = ((String) strategy.copy(LocatorUtils.property(locator, "treatmentConditionName", sourceTreatmentConditionName), sourceTreatmentConditionName));
                copy.setTreatmentConditionName(copyTreatmentConditionName);
            } else {
                copy.treatmentConditionName = null;
            }
            if ((this.careBundles!= null)&&(!this.careBundles.isEmpty())) {
                List<CareBundle> sourceCareBundles;
                sourceCareBundles = this.getCareBundles();
                @SuppressWarnings("unchecked")
                List<CareBundle> copyCareBundles = ((List<CareBundle> ) strategy.copy(LocatorUtils.property(locator, "careBundles", sourceCareBundles), sourceCareBundles));
                copy.careBundles = null;
                List<CareBundle> uniqueCareBundlesl = copy.getCareBundles();
                uniqueCareBundlesl.addAll(copyCareBundles);
            } else {
                copy.careBundles = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new TreatmentConditionResponse();
    }

}
